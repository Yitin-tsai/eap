plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'org.openapi.generator'
    id 'java'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

dependencies {
    implementation project(':eap-common')
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.postgresql:postgresql'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.20'
    implementation 'org.liquibase:liquibase-core'

    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'com.h2database:h2'

}

tasks.named('test') {
    useJUnitPlatform()
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = new File("$rootDir/src/main/resources/openapi/bidService.yaml").toURI().toASCIIString()
    outputDir = "$buildDir/generated"
    apiPackage = "controller"
    modelPackage = "controller.dto"
    generateApiTests = false
    generateModelTests = false
    additionalProperties = [
        interfaceOnly       : "true",
        useSpringBoot3      : "true",
        useTags             : "true",
        modelPropertyNaming : "camelCase",
        lombok              : "true",
        useLombokAnnotations: "true"
    ]
}

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/src/main/java"
        }
    }
}
